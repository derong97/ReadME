{"version":3,"sources":["Image/logo_white.png","LoginPage/HomePage.jsx","LoginPage/BooksYouAdded/BookYouAdded.jsx","LoginPage/BooksYouAdded/BooksYouAdded.jsx","LoginPage/BooksYouAdded/BooksYouAddedPage.jsx","AppRouter.js","serviceWorker.js","index.js"],"names":["module","exports","React","Component","BookYouAdded","state","imageUrl","title","author","avg_rating","review_time","styles","bookCoverImage","width","height","reviewText","fontFamily","className","this","props","children","src","alt","style","onClick","onDelete","asin","BooksYouAdded","map","bookYouAdded","key","BooksYouAddedPage","handleDelete","console","log","Fragment","Navbar","bg","expand","Brand","Logo","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","Divider","Link","href","Item","Form","inline","FormControl","type","placeholder","Button","variant","AppRouter","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"js/main.db2c5578.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/logo_white.55bb7fac.png\";","import React from 'react';\nimport './style_HomePage.css'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Logo from \"../Image/logo_white.png\";\n\nclass HomePage extends React.Component {\n    render() {\n        return (\n            <body>\n                <Navbar className=\"navbar-bg\" variant=\"dark\">\n                    <Navbar.Brand className=\"navbrand\">\n                        <img\n                            alt=\"ReadME Logo\"\n                            src={Logo}\n                            width=\"45\"\n                            height=\"auto\"\n                        />ReadME\n                    </Navbar.Brand>\n                    <Nav className=\"ml-auto\">\n                        <Link exact to=\"/\"><button className=\"login-bttn\">Log in/ Sign up</button></Link>\n                    </Nav>\n                </Navbar>\n\n                <div className=\"home-bg\">\n                    <Link exact to=\"/\"><button className=\"next-page-bttn\">let's explore</button></Link>\n                </div>\n\n                <footer>\n                    <Nav className=\"justify-content-end\">\n                        <Nav.Item>\n                            <Nav.Link className=\"navlink\">Contact Us</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link className=\"navlink\">About Us</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n                </footer>\n            </body>\n        )\n    }\n}\n\nexport default HomePage;","import React, { Component } from \"react\";\nimport Logo from \"../../Image/logo_white.png\";\n\nclass BookYouAdded extends Component {\n  state = {\n    // to call the data of the book here?\n    imageUrl: \"http://ecx.images-amazon.com/images/I/51fAmVkTbyL._SY300_.jpg\",\n    title: \"Girls Ballet Tutu Zebra Hot Pink\",\n    author: \"Riley Sager\",\n    avg_rating: 4.9,\n    review_time: \"09 13, 2009\",\n  };\n\n  styles = {\n    //if you wanted to have a standard style to call\n    bookCoverImage: {\n        width: 85,\n        height: 128,\n    },\n\n    reviewText: {\n        fontFamily: \"Gotham-Book\"\n    }\n  };\n\n  render() {\n    return (\n      <div className= \"container\">\n        {this.props.children}\n        <img src={this.state.imageUrl} alt=\"\" style={this.styles.bookCoverImage} />\n        <h4> {this.state.title}</h4>\n        <h6>by {this.state.author}</h6>\n        <h6>Average Rating: {this.state.avg_rating}</h6>\n        <p style = {this.styles.reviewText}> \n          \"I bought this for my husband who plays the piano. He is having a\n          wonderful time playing these old hymns. The music is at times hard to\n          read because we think the book was published for singing from more\n          than playing from. Great purchase though!\"\n        </p>\n        <p style = {this.styles.reviewText}>\n          <i>{this.state.review_time}</i>\n        </p>\n        <button\n          onClick={() => this.props.onDelete(this.props.BookYouAdded.asin)} //raise event to Counters\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete Book\n        </button>\n      </div>\n    );\n  }\n\n  //   onDelete(){\n  //       console.log(\"delete button pressed!\")\n  //   }\n}\n\nexport default BookYouAdded;\n","import React, { Component } from \"react\";\nimport BookYouAdded from \"./BookYouAdded\";\nimport '../style_BooksYouAddedPage.css'\n\n\nclass BooksYouAdded extends Component {\n\n\n  render() {\n    return (\n      <div>\n        \n        {this.props.BooksYouAdded.map((bookYouAdded) => (\n          <BookYouAdded\n            key={bookYouAdded.asin} //used internally\n            onDelete={this.props.onDelete}\n            bookYouAdded={bookYouAdded}\n          ></BookYouAdded>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default BooksYouAdded;\n","import React, { Component } from \"react\";\n// import \"././style_HomePage.css\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Form,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../../Image/logo_white.png\";\nimport BooksYouAdded from \"./BooksYouAdded\";\nimport \"../style_BooksYouAddedPage.css\";\n\nclass BooksYouAddedPage extends Component {\n  state = {\n    BooksYouAdded: [{ asin: \"0001\" }, { asin: \"0002\" }, { asin: \"0003\" }],\n  };\n\n  handleDelete = (asin) => {\n    //create new array without given counter\n    console.log(\"delete called\", asin);\n    // const counters = this.state.counters.filter((c) => c.id !== counterId);\n    // this.setState({ counters });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar bg=\"dark\" expand=\"lg\">\n          <Navbar.Brand className=\"navbrand\">\n            <img alt=\"ReadME Logo\" src={Logo} width=\"45\" height=\"auto\" />\n            ReadME\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <NavDropdown.Divider />\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <NavDropdown title=\"By Me\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#books-you-added\">\n                  Books You Added\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#Reviews by You\">\n                  Reviews By You\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Form inline>\n              <FormControl\n                type=\"text\"\n                placeholder=\"search by author or title...\"\n                className=\"mr-sm-2\"\n              />\n              <Button variant=\"outline-success\">let's go</Button>\n            </Form>\n\n            <Nav className=\"mr-auto\">\n              <NavDropdown.Divider />\n              <Nav.Link href=\"#my-profile\">My Profile</Nav.Link>\n              <NavDropdown title=\"Add\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#add-review\">\n                  Add Review\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#add-book\">Add Book</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <h2>Books You Added</h2>\n        <div className=\"row\">\n          <h5>\n            Here lies the books you have contributed to the ReadME community.\n          </h5>\n          <button className=\"add-book-bttn\">add book</button>\n        </div>\n\n        <div className=\"container\">\n          <BooksYouAdded\n            BooksYouAdded={this.state.BooksYouAdded}\n            onDelete={this.handleDelete}\n          />\n        </div>\n        <h5>Thank you for your support!</h5>\n\n        {/* <main className=\"container\">\n          <BooksYouAdded\n            BooksYouAdded={this.state.BooksYouAdded}\n            onDelete={this.handleDelete}\n          />\n        </main> */}\n\n        {/* <footer>\n          <Nav className=\"justify-content-end\">\n            <Nav.Item>\n              <Nav.Link className=\"navlink\">Contact Us</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link className=\"navlink\">About Us</Nav.Link>\n            </Nav.Item>\n          </Nav>\n        </footer> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BooksYouAddedPage;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./LoginPage/HomePage\";\nimport BooksYouAddedPage from \"./LoginPage/BooksYouAdded/BooksYouAddedPage\";\n// import LoginPage from './LoginPage/LoginPage'\n// import SignupPage from './LoginPage/SignupPage'\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={BooksYouAddedPage} />\n        {/* <Route exact path=\"/LoginPage\" component={LoginPage}/>\n                <Route exact path=\"/SignupPage\" component={SignupPage}/> */}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}